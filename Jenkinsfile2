@Library('example') _
pipeline {
    agent any

    options {
        timeout(time: 1, unit: 'HOURS')
        disableConcurrentBuilds()
    }

    parameters {
        choice(name: 'ENV', choices: ['dev', 'staging', 'prod'], description: 'Deployment environment')
    }
    
    environment {
        APP_ENV = "${DEPLOY_ENV}"
    }
    
    
    stages {
        stage('Parallel Stages') {
            parallel {
                stage('hello world') {
                    steps {
                        script {
                            helloWorld(name: "friday",
                                        dayOfWeek: "Johnny"
                            )
                        }
                    }
                }
                stage('echo') {
                    steps {
                        script{
                            if (params.ENV == 'dev') {
                                echo 'Deploying to DEV'
                            } else {
                                echo "Skipping deployment: not DEV (got ${params.ENV})"
                            }

                            for (int i = 0; i < 3; i++) {
                                echo "Сообщение ${i}"
                            }

                            try {
                                sh 'exit 1'
                            } catch (Exception e) {
                                echo "Поймана ошибка: ${e.getMessage()}"
                            }

                        }
                    }
                }
            }
        }
    }

    post {
        always {
            deleteDir()
        }
    }
}
